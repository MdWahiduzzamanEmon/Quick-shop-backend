// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMINISTRATOR
  GENERAL_USER
  RETAILER
  SUPPLIER
}

enum WorkerRole {
  RAIDER
  OPERATOR
  REPRESENTATIVE
}

enum user_status {
  ACTIVE
  INACTIVE
  PENDING
  SUSPENDED
  DELETED
}

model User {
  id             String           @id @default(cuid())
  email          String           @unique
  mobile         String           @unique
  username       String           @unique
  password       String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  otherUsers     otherUsers? //only for general user and retailer
  worker         worker? //only for operator, raider, representative
  loggin_history loggin_history[]

  @@index([id, email, mobile, username])
}

model otherUsers {
  id              String      @id @default(cuid())
  User            User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String      @unique
  firstName       String?
  lastName        String?
  profile_picture Json        @default("{}")
  role            Role        @default(GENERAL_USER)
  isActive        user_status @default(ACTIVE)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  @@index([id, userId, role, isActive])
  @@map("otherUsers")
}

// model for operator, raider, representative

model worker {
  id                  String      @id @default(cuid())
  fullName            String?
  role                WorkerRole  @default(OPERATOR)
  fatherName          String?
  employeeID          String?     @unique @default(cuid())
  whatsapp            String?     @unique
  NID                 String?     @unique
  NIDImage            Json        @default("{}")
  education           String?     @default("")
  bankName            String?     @default("")
  branchName          String?     @default("")
  accountNumber       String?     @default("")
  mobileBanking       String?     @default("")
  mobileBankingNumber String?     @default("")
  profile_picture     Json        @default("{}")
  address             String?     @default("")
  zipCode             String?     @default("")
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
  isActive            user_status @default(ACTIVE)
  order               Int         @default(0) //for sorting purpose
  user                User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId              String      @unique

  @@index([id, userId, role, isActive, NID, employeeID, whatsapp])
  @@map("workers")
}

//get loggin info

enum loggin_status {
  SUCCESS
  FAILED
}

model loggin_history {
  id        String        @id @default(cuid())
  userId    String
  user      User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  ipAddress String?
  device    String?
  browser   String?
  os        String?
  location  String?
  status    loggin_status
  note      String?
  loginAt   DateTime      @default(now())
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@index([userId, status]) //indexing for faster search
  @@map("logginInfo") //table name
}
